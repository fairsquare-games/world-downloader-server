name: CICD

on:
  push:
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

env:
  CONTAINER_NAME: world-downloader-server
  IMAGE_NAME: world-downloader-server
  REGISTRY_HOST: ${{ secrets.REGISTRY_HOST }}
  REGISTRY_USERNAME: ${{ secrets.REGISTRY_USERNAME }}
  REGISTRY_PASSWORD: ${{ secrets.REGISTRY_PASSWORD }}

jobs:
  cicd:
    runs-on: ubuntu-latest
    steps:
      - name: CI/1. Checkout repository
        uses: actions/checkout@v2

      - name: CI/2. Extract version from ref
        id: extract-version
        run: echo ::set-output name=version::${GITHUB_REF/refs\/tags\/v/}

      - name: CI/3. Add dynamic environment variables
        uses: allenevans/set-env@v1.1.0
        with:
          IMAGE_ID: ${{ secrets.REGISTRY_HOST }}/${{ env.IMAGE_NAME }}
          IMAGE_VERSION: ${{ steps.extract-version.outputs.version }}
          IMAGE: ${{ secrets.REGISTRY_HOST }}/${{ env.IMAGE_NAME }}:${{ steps.extract-version.outputs.version }}

      - name: CI/4. Docker build
        run: docker build --tag $IMAGE_NAME .

      - name: CI/5. Docker login
        run: echo "$REGISTRY_PASSWORD" | docker login "$REGISTRY_HOST" -u "$REGISTRY_USERNAME" --password-stdin

      - name: CI/6. Docker push
        run: |
          # Push the image to our repository
          docker tag $IMAGE_NAME $IMAGE
          docker push $IMAGE

      - name: CD/1. Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          envs: CONTAINER_NAME,IMAGE,REGISTRY_HOST,REGISTRY_USERNAME,REGISTRY_PASSWORD
          script: |
            # Stop and remove old instance
            docker stop "$CONTAINER_NAME"
            docker rm "$CONTAINER_NAME"

            # Start new instance
            echo $REGISTRY_PASSWORD | docker login $REGISTRY_HOST -u $REGISTRY_USERNAME --password-stdin
            docker run -d --name $CONTAINER_NAME --network=${{ secrets.NGINX_NETWORK }} -v ${{ secrets.CERT_PATH }}:/usr/src/app/certs -e VIRTUAL_PROTO=https -e VIRTUAL_HOST=${{ secrets.VIRTUAL_HOST }} -e VIRTUAL_PORT=443 -e LETSENCRYPT_HOST=${{ secrets.VIRTUAL_HOST }} -e LETSENCRYPT_EMAIL=${{ secrets.LETSENCRYPT_EMAIL }} -e CERT_NAME=${{ secrets.VIRTUAL_HOST }} $IMAGE
      - name: CD/2. Notify Discord
        uses: appleboy/discord-action@master
        with:
          webhook_id: ${{ secrets.DISCORD_WEBHOOK_ID }}
          webhook_token: ${{ secrets.DISCORD_WEBHOOK_TOKEN }}
          color: "#f7f7f7"
          message: "A new version of the world-downloader-server has been deployed: ${{ env.IMAGE }}"
